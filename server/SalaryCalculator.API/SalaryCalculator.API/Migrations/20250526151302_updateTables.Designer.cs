// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SalaryCalculator.API.DAL;

#nullable disable

namespace SalaryCalculator.API.Migrations
{
    [DbContext(typeof(SalaryDbContext))]
    [Migration("20250526151302_updateTables")]
    partial class updateTables
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SalaryCalculator.API.Models.LawBonusGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("LawBonusGroups");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "קבוצה א'"
                        },
                        new
                        {
                            Id = 2,
                            Name = "קבוצה ב'"
                        });
                });

            modelBuilder.Entity("SalaryCalculator.API.Models.ManagementLevel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("LevelValue")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ManagementLevels");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            LevelValue = 0,
                            Name = "ללא"
                        },
                        new
                        {
                            Id = 2,
                            LevelValue = 1,
                            Name = "רמת ניהול 1"
                        },
                        new
                        {
                            Id = 3,
                            LevelValue = 2,
                            Name = "רמת ניהול 2"
                        },
                        new
                        {
                            Id = 4,
                            LevelValue = 3,
                            Name = "רמת ניהול 3"
                        },
                        new
                        {
                            Id = 5,
                            LevelValue = 4,
                            Name = "רמת ניהול 4"
                        });
                });

            modelBuilder.Entity("SalaryCalculator.API.Models.PartTimePercent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Percent")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("PartTimePercents");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Percent = 100
                        },
                        new
                        {
                            Id = 2,
                            Percent = 75
                        },
                        new
                        {
                            Id = 3,
                            Percent = 50
                        });
                });

            modelBuilder.Entity("SalaryCalculator.API.Models.ProfessionalLevel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ProfessionalLevels");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "מתחיל"
                        },
                        new
                        {
                            Id = 2,
                            Name = "מנוסה"
                        });
                });

            modelBuilder.Entity("SalaryCalculator.API.Models.SalaryCalculationRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsEligibleForLawBonus")
                        .HasColumnType("bit");

                    b.Property<int?>("LawBonusGroupId")
                        .HasColumnType("int");

                    b.Property<int>("ManagementLevelId")
                        .HasColumnType("int");

                    b.Property<int>("PartTimePercentId")
                        .HasColumnType("int");

                    b.Property<int>("ProfessionalLevelId")
                        .HasColumnType("int");

                    b.Property<decimal>("SeniorityYears")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("LawBonusGroupId");

                    b.HasIndex("ManagementLevelId");

                    b.HasIndex("PartTimePercentId");

                    b.HasIndex("ProfessionalLevelId");

                    b.ToTable("SalaryCalculations");
                });

            modelBuilder.Entity("SalaryCalculator.API.Models.SalaryCalculationRecord", b =>
                {
                    b.HasOne("SalaryCalculator.API.Models.LawBonusGroup", "LawBonusGroup")
                        .WithMany()
                        .HasForeignKey("LawBonusGroupId");

                    b.HasOne("SalaryCalculator.API.Models.ManagementLevel", "ManagementLevel")
                        .WithMany()
                        .HasForeignKey("ManagementLevelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SalaryCalculator.API.Models.PartTimePercent", "PartTimePercent")
                        .WithMany()
                        .HasForeignKey("PartTimePercentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SalaryCalculator.API.Models.ProfessionalLevel", "ProfessionalLevel")
                        .WithMany()
                        .HasForeignKey("ProfessionalLevelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LawBonusGroup");

                    b.Navigation("ManagementLevel");

                    b.Navigation("PartTimePercent");

                    b.Navigation("ProfessionalLevel");
                });
#pragma warning restore 612, 618
        }
    }
}
